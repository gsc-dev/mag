# Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.
#
# The “X-Accel-Expires” header field sets caching time of a response in seconds. The zero value disables caching for a response. If the value starts with the @ prefix, it sets an absolute time in seconds since Epoch, up to which the response may be cached.
# If the header does not include the “X-Accel-Expires” field, parameters of caching may be set in the header fields “Expires” or “Cache-Control”.
# If the header includes the “Set-Cookie” field, such a response will not be cached.
# If the header includes the “Vary” field with the special value “*”, such a response will not be cached (1.7.7). If the header includes the “Vary” field with another value, such a response will be cached taking into account the corresponding request header fields (1.7.7).

# Processing of one or more of these response header fields can be disabled using the proxy_ignore_headers directive.

    # cache all pages for 120 minutes which returns a 200 OK 302 and will cache 404 pages for 1 minute.
    fastcgi_cache_valid 200 302 301 240m;
    fastcgi_cache_valid 404 1m;
    fastcgi_cache_valid any 1m;
    fastcgi_cache_revalidate on;

    fastcgi_cache_key  $scheme$proxy_host$uri$is_args$args;

    fastcgi_cache_methods GET HEAD;
    set $no_cache "";


    # These selected URI's below won't get cahced.
    # if ($request_uri ~* "(/admin.*|/brand.*|/user.*|/login.*|/dologin.*|/posttogateway-p-paymentLink.*|/sendautomaticmailsforunfilteredcomplaints.*|/selectpaymentplanlanding.*|/selectpaymentplan.*|/getchilds.*|/getservicetypesbycompany.*|/nodeIdByCompany.*|/savenewuser)") {
    #     set $no_cache 1;
    # }

    # Any logged-in user's requests will not be cached and served directly by the backend.
    # (Cookie based caching rule)
    # if ($http_cookie ~* "akosha_session*"){
    #     set $no_cache 1;
    # }


    # Proxy all the requests
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Adds an X-Cache-Status HTTP header in responses to clients
    # The following are the possible values for $upstream_cache_status:
    # MISS – The response was not found in the cache and so was fetched from an origin server. The response might then have been cached.
    # BYPASS – The response was fetched from the origin server instead of served from the cache because the request matched a proxy_cache_bypass directive (see Can I Punch a Hole Through My Cache? below.) The response might then have been cached.
    # EXPIRED – The entry in the cache has expired. The response contains fresh content from the origin server.
    # STALE – The content is stale because the origin server is not responding correctly, and proxy_cache_use_stale was configured.
    # UPDATING – The content is stale because the entry is currently being updated in response to a previous request, and proxy_cache_use_stale updating is configured.
    # REVALIDATED – The proxy_cache_revalidate directive was enabled and NGINX verified that the current cached content was still valid (If-Modified-Since or If-None-Match).
    # HIT – The response contains valid, fresh content direct from the cache.
    add_header X-Cache-Status $upstream_cache_status;

    # By default all get requests are cached, if you need to cache all post requests too then un-comment the line below
    #proxy_cache_methods GET HEAD POST;
    # cache zone defined on http{} section
    fastcgi_cache fastcgi_cache_zone;
    fastcgi_cache_min_uses 1;
    fastcgi_cache_use_stale error timeout invalid_header http_500 http_503;

    # Ignore equests with a nocache cookie or argument, for example http://www.example.com/?nocache=true.
    fastcgi_no_cache $no_cache $cookie_nocache $arg_nocache;
    fastcgi_cache_bypass $no_cache $cookie_nocache $arg_nocache;


    # If not disabled, processing of these header fields has the following effect:
    # “X-Accel-Expires”, “Expires”, “Cache-Control”, “Set-Cookie”, and “Vary” set the parameters of response caching;
    # “X-Accel-Redirect” performs an internal redirect to the specified URI;
    # “X-Accel-Limit-Rate” sets the rate limit for transmission of a response to a client;
    # “X-Accel-Buffering” enables or disables buffering of a response;
    # “X-Accel-Charset” sets the desired charset of a response.

    # fastcgi_ignore_headers X-Accel-Expires Expires Cache-Control;
